[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Koodariverstas Wikiplatform",
    "section": "",
    "text": "Welcome to the Wiki!\nThis site will act as your one-stop-shop to all of your needs during development in koodariverstas. Here you can find articles based on general project timeline. These articles will help you get started in your work, and guide you through the development process. You can also use the search located in the top right of the wiki.\nThere are also categories listed in the sidebar of the wiki. Take a look around the general category for more specific information regarding technologies we use. You can also visit the All articles section from here.\nHappy Coding!\n-Koodariverstas staff\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBeginning a project\n\n\n\n\n\n\n\n\n\nSeptember 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDuring a project\n\n\n\n\n\n\n\n\n\nSeptember 1, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnding a project\n\n\n\n\n\n\n\n\n\nSeptember 1, 2024\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "articles/index.html",
    "href": "articles/index.html",
    "title": "All articles",
    "section": "",
    "text": "Welcome to all articles!\nThis page consists of all the articles currently in the Wiki!\nHere you can find all the articles regardless of their category or date, you can also take advantage of the advanced search functionality to get to know all the articles we currently have.\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\nAdding and Editing pages\n\n\n\nGeneral\n\n\n\n\n\n\n\nNiko Laurila\n\n\nSep 25, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nGathering feedback\n\n\n\nEnding a project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGitHub in Koodariverstas\n\n\n\nGeneral\n\n\nBeginning a project\n\n\n\n\n\n\n\nNiko Laurila\n\n\nOct 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nGuide to Taiga.io\n\n\n\nGeneral\n\n\nDuring a project\n\n\n\n\n\n\n\nNiko Laurila\n\n\nOct 17, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nManaging a workflow\n\n\n\nDuring a project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRules and responsibilities in Koodariverstas\n\n\n\nBeginning a project\n\n\nGeneral\n\n\n\n\n\n\n\nNiko Laurila\n\n\nNov 13, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nStackEdit Format guide\n\n\n\nGeneral\n\n\n\n\n\n\n\nTerhi Patja\n\n\nOct 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTools\n\n\n\nGeneral\n\n\n\n\n\n\n\nNiko Laurila\n\n\nOct 3, 2024\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top",
    "crumbs": [
      "GitHub",
      "All articles"
    ]
  },
  {
    "objectID": "articles/Beginning-a-project/Responsibilities.html",
    "href": "articles/Beginning-a-project/Responsibilities.html",
    "title": "Rules and responsibilities in Koodariverstas",
    "section": "",
    "text": "Koodariverstas has a set of standard rules for everyone working in a project through Koodariverstas. These rules are designed to keep the day to day operations running smoothly and protect the people working in and through Koodariverstas.\nYou should have a clear understanding of these rules before you sign a contract with a company, they will help you understand your rights and commitment required by each party during the workflow.\n\nNote: These rules are considered as general rules, and are therefore subject to change based on individual projects. Some of these rules might change based on the contract written by the employer, Koodariverstas and you. These changes in the rules have to be accepted by each party before officially signing a contract.\n\n\n\n1. Get to know your position. If the “employer” for the project asks you for extra work that is not covered in the contract, you have the right to refuse. You are not obligated to do anything outside what the written contract states.\n2. Do what your contract says. You are expected to complete the work that is laid out in the written contract you have signed. You are contractually obligated to do the work that you have agreed on.\n3. Don’t break your NDA. If the company providing a project requires you to sign an NDA (Non-disclosure agreement), you are legally obligated to not share any information to outside parties. In the case an NDA is signed, each party (Including Koodariverstas) will sign their own NDA. Each party is legally responsible for their own NDA.\n4. Don’t be afraid to ask questions. If you get the feeling that you don’t understand something or you would like to know something, don’t be afraid to ask. You can freely ask Koodariverstas anything you would like to get clarification on. You should also be comfortable with asking the company that has agreed to lead your project for any help in case you need it.\n5. Have fun and learn! We want to provide you with a great opportunity to get to work with real companies in real projects. We encourage you to get the most of your time with us. We want you to be able to confidently take pride in your work and learn as much as possible.",
    "crumbs": [
      "GitHub",
      "All articles",
      "Beginning a project",
      "Rules and responsibilities in Koodariverstas"
    ]
  },
  {
    "objectID": "articles/Beginning-a-project/Responsibilities.html#here-are-the-general-rules",
    "href": "articles/Beginning-a-project/Responsibilities.html#here-are-the-general-rules",
    "title": "Rules and responsibilities in Koodariverstas",
    "section": "",
    "text": "1. Get to know your position. If the “employer” for the project asks you for extra work that is not covered in the contract, you have the right to refuse. You are not obligated to do anything outside what the written contract states.\n2. Do what your contract says. You are expected to complete the work that is laid out in the written contract you have signed. You are contractually obligated to do the work that you have agreed on.\n3. Don’t break your NDA. If the company providing a project requires you to sign an NDA (Non-disclosure agreement), you are legally obligated to not share any information to outside parties. In the case an NDA is signed, each party (Including Koodariverstas) will sign their own NDA. Each party is legally responsible for their own NDA.\n4. Don’t be afraid to ask questions. If you get the feeling that you don’t understand something or you would like to know something, don’t be afraid to ask. You can freely ask Koodariverstas anything you would like to get clarification on. You should also be comfortable with asking the company that has agreed to lead your project for any help in case you need it.\n5. Have fun and learn! We want to provide you with a great opportunity to get to work with real companies in real projects. We encourage you to get the most of your time with us. We want you to be able to confidently take pride in your work and learn as much as possible.",
    "crumbs": [
      "GitHub",
      "All articles",
      "Beginning a project",
      "Rules and responsibilities in Koodariverstas"
    ]
  },
  {
    "objectID": "articles/Beginning-a-project/Responsibilities.html#responsibilities-of-each-party",
    "href": "articles/Beginning-a-project/Responsibilities.html#responsibilities-of-each-party",
    "title": "Rules and responsibilities in Koodariverstas",
    "section": "Responsibilities of each party",
    "text": "Responsibilities of each party\n\nYou\nYou are expected to work within the limits of the written contract you have agreed on. You are expected to work as a professional for the company whose project you have accepted.\nYour responsibility is to finish the project in an acceptable manner. You are responsible for the work you do, and how you portray yourself. It is up to you to be a professional and act like a professional.\nYou are also expected to keep track of your working hours and communicate with either Koodariverstas or the client.\n\n\nKoodariverstas\nWe are responsible for selecting suitable projects, and the candidates for completing the projects. We are also responsible for the possible mediation that might be needed in the case something goes horribly wrong.\nWe are not obligated to finish unfinished work, but we will mediate and try to find solutions between you and the client.\nWe are also responsible for your course credits, and recognition of your work in the case the client has a good reason to not credit you for the work you have done.\nKoodariverstas consists of teachers and expert personnel from XAMK, and is a project backed and managed by the European Union and XAMK therefore Koodariverstas does not receive financial compensation from the client.\nWe will also work closely with you and the client when drafting and signing the contracts and we will ensure that you are treated fairly and the clients needs are met.\n\n\nClient\nThe client is responsible for the final product they receive from you. They act as the product owners for their project.\nThis means that the client themselves is responsible for the project in the case something goes horribly wrong. The client has the final say on the completion of the project and how the project is done.\nThey are also expected to work in coordination with you to give you the resources and guidance you might need during your work.\nThey are expected to provide a signed recommendation letter and certificate of employment for you if you succeed in your work.\nThey can only refuse to write a recommendation after all mediation attempts have failed and they have given a good and understandable reason to refuse.\nIn this case Koodariverstas will write an official recommendation for you signed by XAMK.",
    "crumbs": [
      "GitHub",
      "All articles",
      "Beginning a project",
      "Rules and responsibilities in Koodariverstas"
    ]
  },
  {
    "objectID": "articles/Ending-a-project/Gathering feedback.html",
    "href": "articles/Ending-a-project/Gathering feedback.html",
    "title": "Gathering feedback",
    "section": "",
    "text": "This post is about gathering feedback when ending a project\ntesting updating in real time\n\n\n\n Back to top",
    "crumbs": [
      "GitHub",
      "All articles",
      "Ending a project",
      "Gathering feedback"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html",
    "href": "articles/General/Taiga.html",
    "title": "Guide to Taiga.io",
    "section": "",
    "text": "Taiga.io Logo\n\n\n\n\nTaiga.io is our preferred project management tool. Taiga is fully open-source and has a generous & unlimited free tier. Taiga also offers the ability to self host a taiga instance on your own machines, we use taiga to manage the projects students are working on in Koodariverstas.\nWe recommend that you get to know the platform and its layout when you begin working in your first project.\n\n\n\nTaiga has multiple ways of logging-in, we recommend using the same GitHub account you use in your projects in Koodariverstas. This makes it easy to attribute changes and credit directly to you when the names on both platforms are identical.\nYou can sign in with GitHub directly through the login prompt.\n\n\n\nTaiga.io Login window\n\n\nAfter logging in you can head to the account settings and change your profile picture, name, and password. You can also directly download your account information or fully delete your account from the account settings.\nWhen entering names please use your real legal names so that we know who is who when attributing work and credits.\n\n\n\nWhen you login you are thrown directly into the “projects” view. This view will show you the projects you have created or collaborate on. You can view and manage all your projects from this view.\nThe project view lets you quickly see the issues you are working on and the tasks you are following that are being assigned to others.\n\n\n\nThis is your project view.\n\n\nThis page will help you understand the current to-do on a glance. You can follow others issues and coordinate your work with others and their timelines. If you don’t currently have any projects when logging in, this page will let guide you through creating a new project or joining a existing project.\n\n\n\n\n\nWhen clicking on a project you will find a page that looks like this. Here you can see the team assigned to the project, action history, scrum and kanban, project wiki and current Issues.\n\n\n\nScrum is a standard way to follow and plan development processes.\nTaiga has a fully functional scrum management system that lets you follow tasks and check assigned workflows.\nHere you can see which tasks are allocated to you or other members in your team. You can also track the progress of all tasks here.\n\n\n\n\n\nDifferent tasks require different amounts of work and resources. Scrum let’s us assign the correct resources per task and track their progress in real time.\nThis also helps developers stay focused on their own work, and eases the workload of big projects by cutting it to bite sized bits.\n\nTL;DR: Scrum makes it easy to follow smaller tasks and assign resources to said tasks. Enabling developers to focus on their own tasks.\n\n\n\n\nKanban works in the same manner as scrum, the difference being that kanban focuses on the “bigger picture”. Where scrum concentrates on tasks as a part of a bigger picture, kanban focuses more on user stories. User stories are bigger sized entities that consist of the smaller scrum tasks.\nYou can think of it as a poster, where different parts of the whole poster consists of smaller parts of the poster to make a complete comprehensive poster.\n\n\n\n\n\nThis is the kanban view. Each user story consists of tasks that are managed in Scrum. When work is started on a task that is a part of a story, the story is updated to reflect the changes.\n\n\n\n\n\nHere for example, I have “started working” on a task in user story 1. I have been assigned to the development to tasks for story 1. To reflect this change I have updated the kanban view to reflect the current state of the entire story.\n\nTL;DR: Kanban enables the following of the bigger picture of the project. This helps in planning for bigger features and keeping track of the entire project.\n\n\n\n\nTaiga has also a built in issues system. We use this to track known issues such as bugs, problems, requests or additional requirements. You can see all the current issues on the projects issues page.\nThe issues page shows you the Type, Severity and priority of the issue listed. You can also see the status, when the issue was posted and who it’s assigned to.\n\n\n\n\n\nThis is the issues page, you can search issues by subject or reference. Here you can also add new issues and see the overall state of issues in the current project.\nWhen you click on an issue, it will open the detailed issue page.\n\n\n\n\n\nThis is the detailed issue page. Here you can see the description of the issue including the status, assigned personnel, possible attachments and comments made by other people in the project.\nUsage of issues helps everyone keep track of the problems that may occur during development.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html#what-is-taiga.io",
    "href": "articles/General/Taiga.html#what-is-taiga.io",
    "title": "Guide to Taiga.io",
    "section": "",
    "text": "Taiga.io is our preferred project management tool. Taiga is fully open-source and has a generous & unlimited free tier. Taiga also offers the ability to self host a taiga instance on your own machines, we use taiga to manage the projects students are working on in Koodariverstas.\nWe recommend that you get to know the platform and its layout when you begin working in your first project.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html#account-management",
    "href": "articles/General/Taiga.html#account-management",
    "title": "Guide to Taiga.io",
    "section": "",
    "text": "Taiga has multiple ways of logging-in, we recommend using the same GitHub account you use in your projects in Koodariverstas. This makes it easy to attribute changes and credit directly to you when the names on both platforms are identical.\nYou can sign in with GitHub directly through the login prompt.\n\n\n\nTaiga.io Login window\n\n\nAfter logging in you can head to the account settings and change your profile picture, name, and password. You can also directly download your account information or fully delete your account from the account settings.\nWhen entering names please use your real legal names so that we know who is who when attributing work and credits.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html#projects",
    "href": "articles/General/Taiga.html#projects",
    "title": "Guide to Taiga.io",
    "section": "",
    "text": "When you login you are thrown directly into the “projects” view. This view will show you the projects you have created or collaborate on. You can view and manage all your projects from this view.\nThe project view lets you quickly see the issues you are working on and the tasks you are following that are being assigned to others.\n\n\n\nThis is your project view.\n\n\nThis page will help you understand the current to-do on a glance. You can follow others issues and coordinate your work with others and their timelines. If you don’t currently have any projects when logging in, this page will let guide you through creating a new project or joining a existing project.\n\n\n\n\n\nWhen clicking on a project you will find a page that looks like this. Here you can see the team assigned to the project, action history, scrum and kanban, project wiki and current Issues.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html#scrum",
    "href": "articles/General/Taiga.html#scrum",
    "title": "Guide to Taiga.io",
    "section": "",
    "text": "Scrum is a standard way to follow and plan development processes.\nTaiga has a fully functional scrum management system that lets you follow tasks and check assigned workflows.\nHere you can see which tasks are allocated to you or other members in your team. You can also track the progress of all tasks here.\n\n\n\n\n\nDifferent tasks require different amounts of work and resources. Scrum let’s us assign the correct resources per task and track their progress in real time.\nThis also helps developers stay focused on their own work, and eases the workload of big projects by cutting it to bite sized bits.\n\nTL;DR: Scrum makes it easy to follow smaller tasks and assign resources to said tasks. Enabling developers to focus on their own tasks.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html#kanban",
    "href": "articles/General/Taiga.html#kanban",
    "title": "Guide to Taiga.io",
    "section": "",
    "text": "Kanban works in the same manner as scrum, the difference being that kanban focuses on the “bigger picture”. Where scrum concentrates on tasks as a part of a bigger picture, kanban focuses more on user stories. User stories are bigger sized entities that consist of the smaller scrum tasks.\nYou can think of it as a poster, where different parts of the whole poster consists of smaller parts of the poster to make a complete comprehensive poster.\n\n\n\n\n\nThis is the kanban view. Each user story consists of tasks that are managed in Scrum. When work is started on a task that is a part of a story, the story is updated to reflect the changes.\n\n\n\n\n\nHere for example, I have “started working” on a task in user story 1. I have been assigned to the development to tasks for story 1. To reflect this change I have updated the kanban view to reflect the current state of the entire story.\n\nTL;DR: Kanban enables the following of the bigger picture of the project. This helps in planning for bigger features and keeping track of the entire project.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html#issues",
    "href": "articles/General/Taiga.html#issues",
    "title": "Guide to Taiga.io",
    "section": "",
    "text": "Taiga has also a built in issues system. We use this to track known issues such as bugs, problems, requests or additional requirements. You can see all the current issues on the projects issues page.\nThe issues page shows you the Type, Severity and priority of the issue listed. You can also see the status, when the issue was posted and who it’s assigned to.\n\n\n\n\n\nThis is the issues page, you can search issues by subject or reference. Here you can also add new issues and see the overall state of issues in the current project.\nWhen you click on an issue, it will open the detailed issue page.\n\n\n\n\n\nThis is the detailed issue page. Here you can see the description of the issue including the status, assigned personnel, possible attachments and comments made by other people in the project.\nUsage of issues helps everyone keep track of the problems that may occur during development.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html#customer-feedback-form-in-project",
    "href": "articles/General/Taiga.html#customer-feedback-form-in-project",
    "title": "Guide to Taiga.io",
    "section": "Customer feedback form in Project",
    "text": "Customer feedback form in Project\nVersion history. Only major edits listed here\n\n\n\n\n\n\n\n\n\nVersion\nDate\nCreator\nContent\n\n\n\n\n0.1\ndd.mm.yyyy\nO. O.\nFirst draft\n\n\n0.2\ndd.mm.yyyy\nO. O.\nAll chapters. Sent for review.\n\n\n0.9\ndd.mm.yyyy\nO. O.\nTweaks based on Company feedback, ready for approval\n\n\n1.0\ndd.mm.yyyy\nO. O.\nCompany approved\n\n\n\n\nGeneral\nPurpose of the project and objective(s)\nThis project was initiated because Company X adopted the ISO 9001 quality management system. As part of this system, customer feedback is an essential tool for improving service quality and maintaining customer loyalty and so on…..\nThis project aims to create a customer feedback form that is easy to find and seamless to fill out. The form will include questions designed to meet CSAT (Customer Satisfaction) metrics, while also providing space for open feedback. Additionally, customers will have the option to provide their contact information, along with their preferred time and method for personal follow-up …and so on\n\n\nTerminology\n\n\n\n\n\n\n\nTerm\nExplanation\n\n\n\n\nCSAT\nCustomer satisfaction score. It is a commonly used metric that indicates how satisfied customers are with a company’s products or services.\n\n\nIt’s measured through customer feedback and expressed as a percentage (best 100% to worst 0%).\n\n\n\n\n\n\nProject scope\nThe project scope is:\n\nDesign and development of the feedback form.\nTesting and validation to ensure all requirements.\nImplementation of the form on the company’s website or other relevant platforms.\nWritten instructions how to use, manage and maintain the feedback form.\n\nOut of the scope are:\n\nDeveloping any other customer service feedback tools (such as reporting for the form, CRM integration, chat boxes, etc.).\nMaintaining or redesigning Company’s web page\nThis means that the Company is responsible to add the link to the web page or other relevant places\n\n\n\nSchedule\nProject start date - Project end date\nMajor milestones:\n\nSpecification ready dd.mm.yyyy\nImplementation ready dd.mm.yyyy\nRollout day dd.mm.yyyy\n\n\n\nResources\nPersonnel: Who does what?\nN. N., Company X, Title\n\nRole in the project\nIs responsible for….\n\nM. M., Company X, Title\n\nRole in the project\nIs responsible for….\n\nO. O., Student\n\nRole in the project\nIs responsible for….\n\nP. P., Student\n\nRole in the project\nIs responsible for….\n\nTools and services:\n\nFor development\nVisual Studio Code (free)\nMicrosoft SQL Server Management Studio (SSMS) (free)\nCommunication\nZoom, teams, emails\nTaiga.io\nDocumentation\nCompany’s Google drive\nTaiga.io\nMiro (for diagrams)\n\n\n\nRisk Management\nTop 3 (to 5) risks\n\nrange is high - medium - low for impact and likelihood\n\n\n\n\n\n\n\n\n\n\nRisk\nImpact\nLikelihood\nMitigation plan\n\n\n\n\nDelays on project schedule\nHigh\nMedium\nSet more realistic schedule and deadlines.\n\n\nChosen technology is not suitable\nHigh\nLow\nChange more suitable technology. Will most likely delay the schedule.\n\n\nChosen technology is too difficult\nMedium\nLow\nMore training and support from the Teachers\n\n\n\nWays to reduce risks are:\n\nRisks will be monitored regularly\nSchedule is flexible by default\nActive communication between the project participants\n\n\n\nCommunication Plan\n\nMajority of the meetings and workshops are planned to the Work Plan in advance\nReporting to Koodariverstas and Teachers regularly\nand all other relevant communication actions\n\n\n\nMonitoring and Evaluation\n\nAll follow-up checkpoints are integrated into the Work Plan.\nKoodariverstas will monitor the project in accordance with the Koodariverstas assignment process.\n\nAchievement of objectives will be evaluated against the project’s Work Plan.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html#work-plan",
    "href": "articles/General/Taiga.html#work-plan",
    "title": "Guide to Taiga.io",
    "section": "Work plan",
    "text": "Work plan\nThis is a detailed work plan how the project will actually meet it’s objectives. Which tools, technologies, etc. It uses. How and by whom the testing is done and so on…\n\nUsed tools and technology\n\nDevelopment tools\nVersion control\nWhat database to use\n\n\n\nEnvironments\nDevelopment environment is…\n\nWhere is it and how to access it\n\nTesting environment\n\nWhere is it and how to access it\n\n\n\nSchedule\nPlanning phase\nmm.dd - mm.dd\nObjectives:\n\nThere will be at least 3 workshops\nFinal documentation approved by mm.dd.yyyy\nUser stories with tentative task list approved by mm.dd.yyyy\nTechnology and tools are chosen\nWork plan is updated\n\nImplementation phase\nmm.dd - mm.dd\nObjectives:\n\nDevelopment / testing environments are available by dd.mm.yyyy\nSprints are planned with detailed task lists\nEach sprint will have their own deadlines dates\nWork plan (this document) is approved dd.mm.yyyy\nThis document will be updated and re-approved if necessary (if there arfe any major changes)\nVersion which is ready for acceptance testing dd.mm.yyyy\n\nDeployment phase\nmm.dd - mm.dd\nObjectives:\n\nAcceptance testing done by dd.mm.yyyy\nInstallation dd.mm.yyyy\n\n\n\nWorkshops\n\n\n\n\n\n\n\n\n\nNumber\nDate\nParticipants\nSubject(s)\n\n\n\n\n1\nmm.dd.yyy\nList of necessary persons\nGeneral information, Basic requirements\n\n\n2\nmm.dd.yyy\nList of necessary persons,\nGraphical design requirements, Mandatory and optional fields\n\n\n3\n\n\n\n\n\n\n\n\nFollow-up\nPlanning\n\nWorkshop meetings are also follow-up meetings\nAt the beginning of each workshop the previous tasks, questions, possible documentation is checked over.\n\nImplementation\n\nWeekly meeting\nProgress and plans\nWhat was done\nWhat will be done\nOpen questions\nTask list\nIssues list\nAny other relevant information\n\n\n\nDevelopment process\nDescription about the process\nMore detailed information about the sprints, how, when and by whom the sprints are created\n\n\nSprints\n\nBasic scenario: Functional feedback form with few fields\nAdd the rest of the fields, email responses, etc.\nAdd Brand layout, fine tuning\nFixes and update (only if needed)\n\n\nBased on Company’s feedback after installation\nIs something was left out from the main sprints, it will be done in this sprint\n\n\n\nTesting\n\nUnit testing done by the students as a part of the development process\nEach sprint is tested by the Customer and must be approved before the next sprint\nAcceptance testing\nHow, who and in which environment?\nIssues list cannot have any unsolved critical issues\n\nAny observation and defects are listed in the Issues (Taiga.io)\n\n\nDeployment\nFill this information based on you project\nInstallation date and time: dd.mm.yyyy\n\nPrerequisites\nWhat is needed for the application to be installed\n\nAcceptance testing is successful\nThe production environment is available and accessible\nApplication server\nDatabase\nWhat ever is needed…?\nWho will test the connection, accounts, etc.\nPost notice about the installation a week before the installation day\nWho needs the information that the site is down?\nWho will be responsible posting?\nContent\nand so on\n\n\n\nInstallation schedule\n\nPut the web page in a maintenance state\nWho will do it\n8.00 - 8.30 (give a time frame)\nInstallation of the feedback form\nWho will do it\n8.30-9.00\nInstallation testing\nWho will do it?\n9.00-9.30\nOpen the web site\nPost notice that the site is up and running\n\n\n\nResponsible persons\n\nISP Host technical support: Name, phone\nCustomer\nN. N.. phone\nN. M., phone\nStudents\nName, phone\nAny other essential contact person & phone\n\n\n\nCommunication\n\nNormal communication is done by email\nEmergency communication is done by phone\nEach participant is invited to the Company’s Slack channel,\nSlack channel is used on normal communication\nEmergency communication is done by phone and posted to the Slack channel\n\n\n\nRollback plan\nin case something goes wrong\n\nInfo: For smaller project this page may be enough, but if it is not, you can create new wiki pages, or link external document or add attachments in the Taiga Wiki.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html#requirement-specification-for-online-feedback-form",
    "href": "articles/General/Taiga.html#requirement-specification-for-online-feedback-form",
    "title": "Guide to Taiga.io",
    "section": "Requirement Specification for Online Feedback Form",
    "text": "Requirement Specification for Online Feedback Form\n\nRequirements list\n\nBusiness requirements\n\n\n\n\n\n\n\n\n\nID\nTitle\nPriority\nState\n\n\n\n\nBR 1\nCustomers can give feed back easily\nMandatory\nApproved\n\n\nBR2\nFeedback back form will strengthen Company’s brand\nMandatory\nApproved\n\n\nBR 3\nCompany can have simple access to analyze given data\nMandatory\nApproved\n\n\nBR 4\nThe results must be measurable using CSAT/NPS/CES\nMandatory\nApproved\n\n\n\n\n\nFunctional requirements\n\n\n\n\n\n\n\n\n\nID\nTitle\nPriority\nState\n\n\n\n\nFR 1\nSubmit the form anonymously, or optionally with contact information\nMandatory\nApproved\n\n\nFR 2\nThe form must be responsive and work seamlessly on various devices\nMandatory\nApproved\n\n\nFR 3\nMultilingual (mandatory FIN, SWE, ENG languages)\nMandatory\nApproved\n\n\nFR 4\nBasic form fields are in use and can be mandatory (marked with *) or optional\nMandatory\nApproved\n\n\nFR 5\nAutomatic email response\nMandatory\nApproved\n\n\nFR 6\nIntegrate with our CRM\nOptional\nNew\n\n\n\n\n\nOther requirements\n\n\n\nID\nTitle\nPriority\nState\n\n\n\n\nOR 1\nMust follow our ISO 9001 standard\nMandatory\nApproved\n\n\nOR 2\nMust be GDPR compliance\nMandatory\nApproved\n\n\nOR 3\nMust follow WCAG guidelines\nModerate\nApproved\n\n\nOR 4\nMust follow your Brand guidelines\nMandatory\nApproved\n\n\n\n\n\n\nRequirements\nMore detailed information about each requirement /OR Extend the tables above\n\nFR 1 Submit the form anonymously, or optionally with contact information\nThe customer must be able to fill the feedback form anonymously but if needed the customer can give their contact information: Name, phone and email-address, also preferably choice of contact method and time.\nLinks to other requirements:\n\nOR 1\nOR 2\n\nRoles: the customer\n\n\n\nUser Personas\n\nMeet Customer Matti, who has opinions about the services they use\nMeet Customer service person Saara, who read sand responds to all customer feedbacks\nMeet Business analytics Kaisa, who wants to have metrics about the feedback, so the Company can improve improve business\nMeet Developer Myrsky, who is responsible for developing the feedback form\n\n\n\nUser stories\n\nUser Story 1: As a Customer, I want to give feedback easily so that my opinions can help improve the service.\nUser Story 2: As a Business analytics, I want to have a report of the feedbacks, so I can analyze the data effectively.\nUser Story 3: As a developer, I want the form to be responsive so that it works on all devices.\nUser Story 4: As a customer service person, I want to receive notifications of new feedback so that I can respond prompt\n\n\nNote: As an example user stories 1 and 3 are expanded to the Backlog",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Taiga.html#workshops-1",
    "href": "articles/General/Taiga.html#workshops-1",
    "title": "Guide to Taiga.io",
    "section": "Workshops",
    "text": "Workshops\nThis is an example of a plan for a workshop. If you plan on having a workshop, you can use the information below as a template when filling in information of your workshop.\n\nDate:\ndd.mm.yyyy at 10.00 - 11.30\n\n\nParticipants:\nN. N., Company X, title or role\nM. M., Company X, title or role\nO. O., Student, role in the project\nP. P., Student, role in the project\n\n\nSubjects:\n\nCompany and Students introduction\nChecking that everybody has access the collaboration area & other relevant recourses/ services etc.\n(Open questions & task check here, after this first workshop)\nPurpose of the Customer feedback form\nWhy the feedback form is needed\nUser groups and their roles\nMetrics used for the feedback form\nHow the data should be stored\nGDRP checklist, Company’s privacy policy, or any other rules, and regulations?\nIs there changes to next workshop (as a result of this workshop)?\n\n\n\nMeeting notes\n\nNote: the information from the above bullet list is written here\n\n\n\nOpen questions & tasks:\n\n\n\n\n\n\n\n\nTask\nResponsible person\nDue date\n\n\n\n\nWhat is the Company’s privacy policy and GDPR\nN. N.\nTomorrow\n\n\nThis is going to change the privacy statement, find out who is responsible to do so, and update public web page\nM. M.\nBefore next workshop\n\n\nInvite M. M. to taiga.io\nO. O.\nTomorrow\n\n\n\n\n\nNext Workshop:\n\nxx.yy.yyyy\nChanges to be made\nDate, time, subjects, participant, etc.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Guide to Taiga.io"
    ]
  },
  {
    "objectID": "articles/General/Tools.html",
    "href": "articles/General/Tools.html",
    "title": "Tools",
    "section": "",
    "text": "Tools in Koodariverstas\nThis article acts as a compiled list of different tools we use/recommend using in Koodariverstas. We use different tools for different parts of our work here in Koodariverstas, this means that there are some tools you will have to learn when working in a project inside Koodariverstas. We have also gathered some recommended tools for different use-cases you might want to get to know.\n\nTools we use\n\nTaiga. Taiga is our preferred project management solution we use it to track the progress of projects and it helps everyone keep track of the tasks that are done and need to be done next. Taiga is completely free and open-source. You can read our guide to the usage of Taiga here.\n\n\n\nTools we recommend\n\nVS code. VS-code is a robust IDE that fits almost every need. VS code has a massive library of extensions for almost every development need and want.\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Tools"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html",
    "href": "articles/General/StackEditFormatGuide.html",
    "title": "StackEdit Format guide",
    "section": "",
    "text": "StackEdit is an open source browser based markdown editor. Your display is split between two different views. The panel on the left is your markdown side, where you can write in markdown and use the provided tools to create content, the right side is your preview side that shows you what your content looks like. This article is a modified version of the StackEdit guide document provided in StackEdit.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#create-files-and-folders",
    "href": "articles/General/StackEditFormatGuide.html#create-files-and-folders",
    "title": "StackEdit Format guide",
    "section": "Create files and folders",
    "text": "Create files and folders\nThe file explorer is accessible using the button in left corner of the navigation bar. You can create a new file by clicking the New file button in the file explorer. You can also create folders by clicking the New folder button.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#switch-to-another-file",
    "href": "articles/General/StackEditFormatGuide.html#switch-to-another-file",
    "title": "StackEdit Format guide",
    "section": "Switch to another file",
    "text": "Switch to another file\nAll your files and folders are presented as a tree in the file explorer. You can switch from one to another by clicking a file in the tree.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#rename-a-file",
    "href": "articles/General/StackEditFormatGuide.html#rename-a-file",
    "title": "StackEdit Format guide",
    "section": "Rename a file",
    "text": "Rename a file\nYou can rename the current file by clicking the file name in the navigation bar or by clicking the Rename button in the file explorer.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#delete-a-file",
    "href": "articles/General/StackEditFormatGuide.html#delete-a-file",
    "title": "StackEdit Format guide",
    "section": "Delete a file",
    "text": "Delete a file\nYou can delete the current file by clicking the Remove button in the file explorer. The file will be moved into the Trash folder and automatically deleted after 7 days of inactivity.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#export-a-file",
    "href": "articles/General/StackEditFormatGuide.html#export-a-file",
    "title": "StackEdit Format guide",
    "section": "Export a file",
    "text": "Export a file\nYou can export the current file by clicking Export to disk in the menu. You can choose to export the file as plain Markdown, as HTML using a Handlebars template or as a PDF.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#open-a-file",
    "href": "articles/General/StackEditFormatGuide.html#open-a-file",
    "title": "StackEdit Format guide",
    "section": "Open a file",
    "text": "Open a file\nYou can open a file from Google Drive, Dropbox or GitHub by opening the Synchronize sub-menu and clicking Open from. Once opened in the workspace, any modification in the file will be automatically synced.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#save-a-file",
    "href": "articles/General/StackEditFormatGuide.html#save-a-file",
    "title": "StackEdit Format guide",
    "section": "Save a file",
    "text": "Save a file\nYou can save any file of the workspace to Google Drive, Dropbox or GitHub by opening the Synchronize sub-menu and clicking Save on. Even if a file in the workspace is already synced, you can save it to another location. StackEdit can sync one file with multiple locations and accounts.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#synchronize-a-file",
    "href": "articles/General/StackEditFormatGuide.html#synchronize-a-file",
    "title": "StackEdit Format guide",
    "section": "Synchronize a file",
    "text": "Synchronize a file\nOnce your file is linked to a synchronized location, StackEdit will periodically synchronize it by downloading/uploading any modification. A merge will be performed if necessary and conflicts will be resolved.\nIf you just have modified your file and you want to force syncing, click the Synchronize now button in the navigation bar.\n\nNote: The Synchronize now button is disabled if you have no file to synchronize.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#manage-file-synchronization",
    "href": "articles/General/StackEditFormatGuide.html#manage-file-synchronization",
    "title": "StackEdit Format guide",
    "section": "Manage file synchronization",
    "text": "Manage file synchronization\nSince one file can be synced with multiple locations, you can list and manage synchronized locations by clicking File synchronization in the Synchronize sub-menu. This allows you to list and remove synchronized locations that are linked to your file.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#publish-a-file",
    "href": "articles/General/StackEditFormatGuide.html#publish-a-file",
    "title": "StackEdit Format guide",
    "section": "Publish a File",
    "text": "Publish a File\nYou can publish your file by opening the Publish sub-menu and by clicking Publish to. For some locations, you can choose between the following formats:\n\nMarkdown: publish the Markdown text on a website that can interpret it (GitHub for instance),\nHTML: publish the file converted to HTML via a Handlebars template (on a blog for example).",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#smartypants",
    "href": "articles/General/StackEditFormatGuide.html#smartypants",
    "title": "StackEdit Format guide",
    "section": "SmartyPants",
    "text": "SmartyPants\nSmartyPants converts ASCII punctuation characters into “smart” typographic punctuation HTML entities. For example:\n\n\n\n\n\n\n\n\n\nASCII\nHTML\n\n\n\n\nSingle backticks\n'Isn't this fun?'\n‘Isn’t this fun?’\n\n\nQuotes\n\"Isn't this fun?\"\n“Isn’t this fun?”\n\n\nDashes\n-- is en-dash, --- is em-dash\n– is en-dash, — is em-dash",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#katex",
    "href": "articles/General/StackEditFormatGuide.html#katex",
    "title": "StackEdit Format guide",
    "section": "KaTeX",
    "text": "KaTeX\nYou can render LaTeX mathematical expressions using KaTeX:\nThe Gamma function satisfying \\(\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N\\) is via the Euler integral\n\\[\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n\\]\n\nYou can find more information about LaTeX mathematical expressions here.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/General/StackEditFormatGuide.html#section",
    "href": "articles/General/StackEditFormatGuide.html#section",
    "title": "StackEdit Format guide",
    "section": "",
    "text": "This document is directly based on the original StackEdit welcome guide found in every new StackEdit document. XAMK is not affiliated with StackEdit and has no connections to the team developing StackEdit. StackEdit is an open source project licensed under the apache 2.0 license.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "StackEdit Format guide"
    ]
  },
  {
    "objectID": "articles/During-a-project/managing a workflow.html",
    "href": "articles/During-a-project/managing a workflow.html",
    "title": "Managing a workflow",
    "section": "",
    "text": "This is a page about managing a workflow during a project\n\n\n\n Back to top",
    "crumbs": [
      "GitHub",
      "All articles",
      "During a project",
      "Managing a workflow"
    ]
  },
  {
    "objectID": "articles/During-a-project/index.html",
    "href": "articles/During-a-project/index.html",
    "title": "During a project",
    "section": "",
    "text": "Congratulations on making it through the daunting start! Now you might already have the basics down, good for you!\nYou might now be thinking “I know the basics, tell me what i need to know in my day to day work”. Well worry not, here you will find all the articles you might find useful during your work with us.\nTake a look around, who knows what you might find!\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n\n\n\n\nGuide to Taiga.io\n\n\n\nGeneral\n\n\nDuring a project\n\n\n\n\n\n\n\nNiko Laurila\n\n\nOct 17, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nManaging a workflow\n\n\n\nDuring a project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top",
    "crumbs": [
      "GitHub",
      "All articles",
      "During a project"
    ]
  },
  {
    "objectID": "articles/General/General adding test.html",
    "href": "articles/General/General adding test.html",
    "title": "Adding and Editing pages",
    "section": "",
    "text": "This article will teach you how to add pages and edit existing pages in our Wiki. This might be useful when you want to document your findings or want to add a component you made to the library of components that everyone can freely use.\n\n\nOn every page, you will find the “Edit this page” and “Report an issue” buttons. “Edit this page” lets you edit the current page you are on and “Report an issue” lets you report any issues you might come across.\nIf you are a student “Edit this page” will notify you about the requirement of forking your own branch for modifications. “Report an issue” opens up a new GitHub issue for the team to see.\n\n\n\nGitHub actions on the right navigation bar\n\n\nWhen a page has the integrated navigation bar on the right. The GitHub actions can be found on the bottom of the navigation element.\n\n\n\nEdit this page and Report an issue buttons. These buttons are located at the bottom when no navigation is present\n\n\nIf a site doesn’t have the right navigation element, these buttons can be found in the footer of the page.\n\n\n\nWhen adding a new page to the wiki, head to the GitHub repository (Link located at the top right of the page).\n\n\n\nGithub link location\n\n\nInside the GitHub repository find the “articles” folder. Inside the articles folder find the category folder where you want to add your article. If you want to edit an article instead, simply head to the article you want to edit, and edit the .qmd file of the article.\n\nNote: Please refrain from modifying articles written by other people. If you still think that an article requires modifications, please ask the user in the articles “author” section for permission to modify their work, if you make changes, add yourself to the authors list of the article. You can find other users in the repository user list.\n\n\n\n\nGithub articles folder\n\n\nAfter choosing a folder suitable for your article, you can add a .qmd file directly in GitHub. A .qmd file is automatically formatted and added to the hosted website, they are also sorted by category and inserted into the websites search function.\n\nNote: Quarto MarkDown (.qmd) and regular MarkDown (.md) are different file formats. If you have imported a file from a markdown editor, please make sure to change the file to .qmd before adding it to the wiki.\n\n\n\n\nAdding a file in GitHub. You can either create a new file or import a pre-made .qmd file.\n\n\nTo add a .qmd file simply add .qmd in the file name when finalizing your file (Red box in the image below). When adding content be sure to integrate required metadata from the following code block:\n---\ntitle: \"Example title (This is the title you want the reader to see and \"interact\" with)\"\ncategories: [example category] ## Current categories are: Beginning a project, During a project, Ending a project, General (Categories are case sensitive)\ndate: \"9.25.2024\" ## date and time format is MM.DD.YYYY\nauthor: Firstname Lastname, Firstname Lastname ## Author/authors of the article. \ndate-modified: last-modified ## This adds an automatic last modified field to the article, last-modified function will automatically add the correct date when a modification is made to the article.\ntoc: true ##this adds an automatic Table-Of-Content for your article.\n---\nThe wiki supports full markdown and lets you have total control over the content of your article. We recommend using a simple markdown editor such as StackEdit (You can also read our article on the basics of StackEdit here).\nThe orange area in the image shown below is your “article” section. This section has to include the metadata at the top of the section for the article (Otherwise your article WILL NOT be indexed and won’t be rendered to the wiki)! After you have included the metadata section, you are free to write and format whatever you wish in the main article.\n\nNote: You are responsible for the content you write in your article. It is your responsibility to fact check and reference others work correctly. All articles are moderated and checked for disruptive content before they are published in the wiki.\n\n\n\n\nEditing a file. RED section is your .qmd files name. YELLOW section is the main article section.\n\n\nWhen you feel like your article is ready to publish, simply press the green “Commit Changes” button in github.\nIf you are a part of Koodariverstas staff, you have the permissions to directly push changes to main.\n\nNote: When a staff member is pushing their changes GitHub will give you the option to bypass the rules and push directly to main.\n\n\n\n\nIf you are a student working in a project and want to edit or publish an article, you need to create your own branch for the changes you have made. Your branch will be sent automatically for review when you push your changes. When your changes are approved by an administrator your changes will be automatically updated to the wiki and your branch will be deleted.\nThere are a few ways of managing your branches. Here are two options we recommend for everyone regardless of their technical knowledge and experience with GitHub.\n\n\nWhen adding directly through GitHub you will be prompted when committing to create a new branch for your changes.\n\n\n\nProposing a change in GitHub\n\n\nSelect the “create a new branch” option from the selection. This will make a new branch for your changes and send an automatic request for review for administrators.\n\nNote: You will not be able to commit directly to main as a student. Even if you get the option to commit to main, you will get an error message saying that your commit has been blocked.\n\n\n\n\nAlternatively you can use the GitHub desktop app for creating a new branch. GitHub desktop lets you create and manage you branches directly in the app making it easy to keep track of your branches and changes.\n\n\n\nCreating a branch in GH desktop app\n\n\nGitHub desktop lets you manage your branches and the cloned repository with ease. These are the options we recommend you use when adding or editing content. There are other ways of managing your branches, but these are the ones we recommend for everyone.\nManaging branches directly through VS codes version control is also an option, but we have noticed that VS code has some trouble with sending requests directly to GitHub causing some pull requests to simply never show up to the administrators.\n\nNote: In both cases (Staff and Student) when your push is completed your article will be pushed to the wiki automatically. It will take a minute or two for your article to show up correctly on the web page.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Adding and Editing pages"
    ]
  },
  {
    "objectID": "articles/General/General adding test.html#editing-existing-pages-and-reporting-issues.",
    "href": "articles/General/General adding test.html#editing-existing-pages-and-reporting-issues.",
    "title": "Adding and Editing pages",
    "section": "",
    "text": "On every page, you will find the “Edit this page” and “Report an issue” buttons. “Edit this page” lets you edit the current page you are on and “Report an issue” lets you report any issues you might come across.\nIf you are a student “Edit this page” will notify you about the requirement of forking your own branch for modifications. “Report an issue” opens up a new GitHub issue for the team to see.\n\n\n\nGitHub actions on the right navigation bar\n\n\nWhen a page has the integrated navigation bar on the right. The GitHub actions can be found on the bottom of the navigation element.\n\n\n\nEdit this page and Report an issue buttons. These buttons are located at the bottom when no navigation is present\n\n\nIf a site doesn’t have the right navigation element, these buttons can be found in the footer of the page.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Adding and Editing pages"
    ]
  },
  {
    "objectID": "articles/General/General adding test.html#adding-a-new-page",
    "href": "articles/General/General adding test.html#adding-a-new-page",
    "title": "Adding and Editing pages",
    "section": "",
    "text": "When adding a new page to the wiki, head to the GitHub repository (Link located at the top right of the page).\n\n\n\nGithub link location\n\n\nInside the GitHub repository find the “articles” folder. Inside the articles folder find the category folder where you want to add your article. If you want to edit an article instead, simply head to the article you want to edit, and edit the .qmd file of the article.\n\nNote: Please refrain from modifying articles written by other people. If you still think that an article requires modifications, please ask the user in the articles “author” section for permission to modify their work, if you make changes, add yourself to the authors list of the article. You can find other users in the repository user list.\n\n\n\n\nGithub articles folder\n\n\nAfter choosing a folder suitable for your article, you can add a .qmd file directly in GitHub. A .qmd file is automatically formatted and added to the hosted website, they are also sorted by category and inserted into the websites search function.\n\nNote: Quarto MarkDown (.qmd) and regular MarkDown (.md) are different file formats. If you have imported a file from a markdown editor, please make sure to change the file to .qmd before adding it to the wiki.\n\n\n\n\nAdding a file in GitHub. You can either create a new file or import a pre-made .qmd file.\n\n\nTo add a .qmd file simply add .qmd in the file name when finalizing your file (Red box in the image below). When adding content be sure to integrate required metadata from the following code block:\n---\ntitle: \"Example title (This is the title you want the reader to see and \"interact\" with)\"\ncategories: [example category] ## Current categories are: Beginning a project, During a project, Ending a project, General (Categories are case sensitive)\ndate: \"9.25.2024\" ## date and time format is MM.DD.YYYY\nauthor: Firstname Lastname, Firstname Lastname ## Author/authors of the article. \ndate-modified: last-modified ## This adds an automatic last modified field to the article, last-modified function will automatically add the correct date when a modification is made to the article.\ntoc: true ##this adds an automatic Table-Of-Content for your article.\n---\nThe wiki supports full markdown and lets you have total control over the content of your article. We recommend using a simple markdown editor such as StackEdit (You can also read our article on the basics of StackEdit here).\nThe orange area in the image shown below is your “article” section. This section has to include the metadata at the top of the section for the article (Otherwise your article WILL NOT be indexed and won’t be rendered to the wiki)! After you have included the metadata section, you are free to write and format whatever you wish in the main article.\n\nNote: You are responsible for the content you write in your article. It is your responsibility to fact check and reference others work correctly. All articles are moderated and checked for disruptive content before they are published in the wiki.\n\n\n\n\nEditing a file. RED section is your .qmd files name. YELLOW section is the main article section.\n\n\nWhen you feel like your article is ready to publish, simply press the green “Commit Changes” button in github.\nIf you are a part of Koodariverstas staff, you have the permissions to directly push changes to main.\n\nNote: When a staff member is pushing their changes GitHub will give you the option to bypass the rules and push directly to main.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Adding and Editing pages"
    ]
  },
  {
    "objectID": "articles/General/General adding test.html#adding-and-editing-pages-as-a-student",
    "href": "articles/General/General adding test.html#adding-and-editing-pages-as-a-student",
    "title": "Adding and Editing pages",
    "section": "",
    "text": "If you are a student working in a project and want to edit or publish an article, you need to create your own branch for the changes you have made. Your branch will be sent automatically for review when you push your changes. When your changes are approved by an administrator your changes will be automatically updated to the wiki and your branch will be deleted.\nThere are a few ways of managing your branches. Here are two options we recommend for everyone regardless of their technical knowledge and experience with GitHub.\n\n\nWhen adding directly through GitHub you will be prompted when committing to create a new branch for your changes.\n\n\n\nProposing a change in GitHub\n\n\nSelect the “create a new branch” option from the selection. This will make a new branch for your changes and send an automatic request for review for administrators.\n\nNote: You will not be able to commit directly to main as a student. Even if you get the option to commit to main, you will get an error message saying that your commit has been blocked.\n\n\n\n\nAlternatively you can use the GitHub desktop app for creating a new branch. GitHub desktop lets you create and manage you branches directly in the app making it easy to keep track of your branches and changes.\n\n\n\nCreating a branch in GH desktop app\n\n\nGitHub desktop lets you manage your branches and the cloned repository with ease. These are the options we recommend you use when adding or editing content. There are other ways of managing your branches, but these are the ones we recommend for everyone.\nManaging branches directly through VS codes version control is also an option, but we have noticed that VS code has some trouble with sending requests directly to GitHub causing some pull requests to simply never show up to the administrators.\n\nNote: In both cases (Staff and Student) when your push is completed your article will be pushed to the wiki automatically. It will take a minute or two for your article to show up correctly on the web page.",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "Adding and Editing pages"
    ]
  },
  {
    "objectID": "articles/General/index.html",
    "href": "articles/General/index.html",
    "title": "General articles",
    "section": "",
    "text": "Welcome to General articles!\nThese articles cover miscellaneous subjects and are designed for you to learn more about various topics. Here we cover the basics of various topics you might find useful when working in Koodariverstas. Feel free to browse the selection of articles below.\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n\n\n\n\nGuide to Taiga.io\n\n\n\n\n\n\nNiko Laurila\n\n\nOct 17, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTools\n\n\n\n\n\n\nNiko Laurila\n\n\nOct 3, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nGitHub in Koodariverstas\n\n\n\n\n\n\nNiko Laurila\n\n\nOct 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nStackEdit Format guide\n\n\n\n\n\n\nTerhi Patja\n\n\nOct 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nAdding and Editing pages\n\n\n\n\n\n\nNiko Laurila\n\n\nSep 25, 2024\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles"
    ]
  },
  {
    "objectID": "articles/General/Github tutorial.html",
    "href": "articles/General/Github tutorial.html",
    "title": "GitHub in Koodariverstas",
    "section": "",
    "text": "Koodariverstas is a part of Xamk and as a result, all code developed in Koodariverstas should be documented on our GitHub.\nOur GitHub is open to everyone and we encourage you to get to know the repositories/projects we are working on. Even this Wiki is fully hosted through GitHub pages and automated through GitHub actions. All of the source code is available at our repository.\nYour first step is to create your own GitHub account here.\nWhen you have created your GitHub account, you can request access to the GitHub organization through Xinfo.\n\nPlease note: only one member of a team needs to send a request to Xinfo (Read inviting others into a repository from below).\n\n\n\n\nThis is the main page of Xinfo. You want to leave an ICT service request for access to GitHub\n\n\nWhen sending a request to access the organization, please attach your exact GitHub username to the ticket.\n\n\n\nFill your information here. Be sure to add a description where you clearly state requesting access to GitHub\n\n\nWhen you gain access to the organization inside GitHub, you can create your own repositories and invite anyone to collaborate on your own repository. One member inside the organization can directly invite others from outside the organization to collaborate on repositories they own.\n\n\n\nYou can manage access to your repository from the repository access settings.\n\n\nWe hope this helps you begin development in Koodariverstas.\nHappy Coding!",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "GitHub in Koodariverstas"
    ]
  },
  {
    "objectID": "articles/General/Github tutorial.html#guide-on-joining-the-xamk-github-organization",
    "href": "articles/General/Github tutorial.html#guide-on-joining-the-xamk-github-organization",
    "title": "GitHub in Koodariverstas",
    "section": "",
    "text": "Koodariverstas is a part of Xamk and as a result, all code developed in Koodariverstas should be documented on our GitHub.\nOur GitHub is open to everyone and we encourage you to get to know the repositories/projects we are working on. Even this Wiki is fully hosted through GitHub pages and automated through GitHub actions. All of the source code is available at our repository.\nYour first step is to create your own GitHub account here.\nWhen you have created your GitHub account, you can request access to the GitHub organization through Xinfo.\n\nPlease note: only one member of a team needs to send a request to Xinfo (Read inviting others into a repository from below).\n\n\n\n\nThis is the main page of Xinfo. You want to leave an ICT service request for access to GitHub\n\n\nWhen sending a request to access the organization, please attach your exact GitHub username to the ticket.\n\n\n\nFill your information here. Be sure to add a description where you clearly state requesting access to GitHub\n\n\nWhen you gain access to the organization inside GitHub, you can create your own repositories and invite anyone to collaborate on your own repository. One member inside the organization can directly invite others from outside the organization to collaborate on repositories they own.\n\n\n\nYou can manage access to your repository from the repository access settings.\n\n\nWe hope this helps you begin development in Koodariverstas.\nHappy Coding!",
    "crumbs": [
      "GitHub",
      "All articles",
      "General articles",
      "GitHub in Koodariverstas"
    ]
  },
  {
    "objectID": "articles/Ending-a-project/index.html",
    "href": "articles/Ending-a-project/index.html",
    "title": "Ending a project",
    "section": "",
    "text": "You have finally reached the goal and the development is done! Congratulations on seeing it through with us!\nNow that all the hard work is done it’s time to check on the client and gather that sweet data.\nFeedback helps you develop as a professional, and lets you learn from your past work. Reflecting on ones work is the key to improvement after all!\nHere you will find the last steps you should take when wrapping up!\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n\n\n\n\nGathering feedback\n\n\n\nEnding a project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top",
    "crumbs": [
      "GitHub",
      "All articles",
      "Ending a project"
    ]
  },
  {
    "objectID": "articles/Beginning-a-project/index.html",
    "href": "articles/Beginning-a-project/index.html",
    "title": "Beginning a project",
    "section": "",
    "text": "Beginning your adventure in koodariverstas but have no idea where to start?\nWell today is your lucky day! Here you can find all the information that might come in handy when starting your work.\nBelow you can find all the articles that are designed to help you get your bearings when you are starting out.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n\n\n\n\nGitHub in Koodariverstas\n\n\n\nGeneral\n\n\nBeginning a project\n\n\n\n\n\n\n\nNiko Laurila\n\n\nOct 2, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nRules and responsibilities in Koodariverstas\n\n\n\nBeginning a project\n\n\nGeneral\n\n\n\n\n\n\n\nNiko Laurila\n\n\nNov 13, 2024\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top",
    "crumbs": [
      "GitHub",
      "All articles",
      "Beginning a project"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About koodariverstas",
    "section": "",
    "text": "Welcome to koodariverstas! Our mission is to bridge the gap between education and corporations. We believe that everyone has the right to prove their skills and be recognized for their work, that’s why we want to provide students the opportunity to work in real projects for companies.\n\n\n Back to top",
    "crumbs": [
      "GitHub",
      "About koodariverstas"
    ]
  }
]